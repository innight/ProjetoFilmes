// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFilmes.API.Data;

#nullable disable

namespace ProjetoFilmes.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Ator", b =>
                {
                    b.Property<int>("AtorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AtorID"), 1L, 1);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilmeID")
                        .HasColumnType("int");

                    b.Property<bool>("Genero")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("AtorID");

                    b.HasIndex("FilmeID");

                    b.ToTable("Atores");

                    b.HasData(
                        new
                        {
                            AtorID = 1,
                            DataNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmeID = 1,
                            Genero = false,
                            Nome = "Pedro Pascal"
                        },
                        new
                        {
                            AtorID = 2,
                            DataNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmeID = 2,
                            Genero = false,
                            Nome = "Emilia Clarke"
                        },
                        new
                        {
                            AtorID = 3,
                            DataNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FilmeID = 3,
                            Genero = false,
                            Nome = "Matt Smith"
                        });
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Avaliacao", b =>
                {
                    b.Property<int>("AvaliacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvaliacaoID"), 1L, 1);

                    b.Property<int>("FilmeID")
                        .HasColumnType("int");

                    b.Property<string>("Opiniao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<int>("UtilizadorID")
                        .HasColumnType("int");

                    b.HasKey("AvaliacaoID");

                    b.HasIndex("FilmeID");

                    b.HasIndex("UtilizadorID");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            AvaliacaoID = 1,
                            FilmeID = 1,
                            Opiniao = "interessante",
                            Rating = (byte)4,
                            UtilizadorID = 1
                        },
                        new
                        {
                            AvaliacaoID = 2,
                            FilmeID = 2,
                            Opiniao = "bom",
                            Rating = (byte)4,
                            UtilizadorID = 1
                        });
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Diretor", b =>
                {
                    b.Property<int>("DiretorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiretorID"), 1L, 1);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilmeID")
                        .HasColumnType("int");

                    b.Property<bool>("Genero")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("DiretorID");

                    b.HasIndex("FilmeID");

                    b.ToTable("Diretores");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Filme", b =>
                {
                    b.Property<int>("FilmeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FilmeID"), 1L, 1);

                    b.Property<short>("AvaliacaoAvg")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("FilmeID");

                    b.ToTable("Filmes");

                    b.HasData(
                        new
                        {
                            FilmeID = 1,
                            AvaliacaoAvg = (short)0,
                            DataLancamento = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 2,
                            Titulo = "The Last of Us"
                        },
                        new
                        {
                            FilmeID = 2,
                            AvaliacaoAvg = (short)0,
                            DataLancamento = new DateTime(2011, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 2,
                            Titulo = "Game of Thrones"
                        },
                        new
                        {
                            FilmeID = 3,
                            AvaliacaoAvg = (short)0,
                            DataLancamento = new DateTime(2022, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 7,
                            Titulo = "Avatar: The Way of Water"
                        });
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Utilizador", b =>
                {
                    b.Property<int>("UtilizadorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtilizadorID"), 1L, 1);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Genero")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UtilizadorID");

                    b.ToTable("Utilizadores");

                    b.HasData(
                        new
                        {
                            UtilizadorID = 1,
                            DataNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = false,
                            Nome = "Joao",
                            UserName = "UtilizadorTeste"
                        },
                        new
                        {
                            UtilizadorID = 2,
                            DataNascimento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = false,
                            Nome = "Semedo",
                            UserName = "UtilizadorTeste2"
                        });
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Ator", b =>
                {
                    b.HasOne("ProjetoFilmes.LIB.Models.Filme", "Filme")
                        .WithMany("Atores")
                        .HasForeignKey("FilmeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Avaliacao", b =>
                {
                    b.HasOne("ProjetoFilmes.LIB.Models.Filme", "Filme")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FilmeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoFilmes.LIB.Models.Utilizador", "Utilizador")
                        .WithMany("Avaliacao")
                        .HasForeignKey("UtilizadorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filme");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Diretor", b =>
                {
                    b.HasOne("ProjetoFilmes.LIB.Models.Filme", "Filme")
                        .WithMany("Diretores")
                        .HasForeignKey("FilmeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Filme", b =>
                {
                    b.Navigation("Atores");

                    b.Navigation("Avaliacoes");

                    b.Navigation("Diretores");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Utilizador", b =>
                {
                    b.Navigation("Avaliacao");
                });
#pragma warning restore 612, 618
        }
    }
}
