// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFilmes.API.Data;

#nullable disable

namespace ProjetoFilmes.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230129175116_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Ator", b =>
                {
                    b.Property<int>("IdAtor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAtor"), 1L, 1);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilmeId")
                        .HasColumnType("int");

                    b.Property<bool>("Genero")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdAtor");

                    b.HasIndex("FilmeId");

                    b.ToTable("Atores");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Avaliacao", b =>
                {
                    b.Property<int>("IdAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAvaliacao"), 1L, 1);

                    b.Property<int>("FilmeId")
                        .HasColumnType("int");

                    b.Property<string>("Opiniao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<int>("UtilizadorIdUtilizador")
                        .HasColumnType("int");

                    b.HasKey("IdAvaliacao");

                    b.HasIndex("FilmeId");

                    b.HasIndex("UtilizadorIdUtilizador");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Diretor", b =>
                {
                    b.Property<int>("IdDiretor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDiretor"), 1L, 1);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("FilmeId")
                        .HasColumnType("int");

                    b.Property<bool>("Genero")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdDiretor");

                    b.HasIndex("FilmeId");

                    b.ToTable("Diretores");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Filme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short>("AvaliacaoAvg")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Utilizador", b =>
                {
                    b.Property<int>("IdUtilizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtilizador"), 1L, 1);

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Genero")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtilizador");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Ator", b =>
                {
                    b.HasOne("ProjetoFilmes.LIB.Models.Filme", "Filme")
                        .WithMany("Atores")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Avaliacao", b =>
                {
                    b.HasOne("ProjetoFilmes.LIB.Models.Filme", "Filme")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoFilmes.LIB.Models.Utilizador", "Utilizador")
                        .WithMany("Avaliacao")
                        .HasForeignKey("UtilizadorIdUtilizador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filme");

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Diretor", b =>
                {
                    b.HasOne("ProjetoFilmes.LIB.Models.Filme", "Filme")
                        .WithMany("Diretores")
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Filme", b =>
                {
                    b.Navigation("Atores");

                    b.Navigation("Avaliacoes");

                    b.Navigation("Diretores");
                });

            modelBuilder.Entity("ProjetoFilmes.LIB.Models.Utilizador", b =>
                {
                    b.Navigation("Avaliacao");
                });
#pragma warning restore 612, 618
        }
    }
}
